#### 快捷方式
```
/home/cve-repo/0x04-pwn2own-ebpf-jmp32-cve-2020-8835
```


启动脚本
```
#!/bin/sh
qemu-system-x86_64 \
-m 1024 -smp 1  \
-display none -serial stdio -no-reboot \
-cpu kvm64,+smep \
-initrd /home/stringipc/rootfs.img \
-kernel ./bzImage \
-netdev user,id=t0, -device e1000,netdev=t0,id=nic0 \
-gdb tcp::1234 \
-append "root=/dev/sda console=ttyS0 earlyprintk=serial oops=panic panic_on_warn=0 nokaslr ftrace_dump_on_oops=orig_cpu
 rodata=n vsyscall=native net.ifnames=0 biosdevname=0 "
```

```
#!/bin/bash
qemu-system-x86_64 \
    -m 256M \
    -enable-kvm \
    -nographic -kernel ./bzImage \
    -append 'root=/dev/ram rw console=ttyS0 loglevel=3 oops=panic panic=1 nokaslr' \
    -initrd ./rootfs.img \
    -monitor /dev/null \
    -smp cores=2,threads=2  \
    -cpu kvm64,+smep,+smap  -s 2>/dev/null
```
解压系统文件
```
cpio -idmv < initramfs.cpio
```
创建系统文件
```
find . | cpio -o --format=newc > ../rootfs.img
```


查看modprobe_path函数的地址
```
gdb-peda$ x/3i 0xffffffff82446d80
   0xffffffff82446d80 <modprobe_path>:	(bad)  
   0xffffffff82446d81 <modprobe_path+1>:	
    jae    0xffffffff82446de5 <modprobe_path+101>
   0xffffffff82446d83 <modprobe_path+3>:	

```
或者
```
gdb-peda$ p modprobe_path
$1 = 0xffffffff82446d80 <modprobe_path> "/sbin/modprobe"

```
修改之前
```
gdb-peda$ x/s 0xffffffff82446d80
0xffffffff82446d80 <modprobe_path>:	"/sbin/modprobe"
```
修改之后
```
gdb-peda$ x/s 0xffffffff82446d80
0xffffffff82446d80 <modprobe_path>:	"/tmp/chmod"
```
或者
```
gdb-peda$ x/3gx 0xffffffff82446d80
0xffffffff82446d80 <modprobe_path>:	0x6d68632f706d742f	0x000065620000646f
```
xxd下查看
```
00000000: 2f74 6d70 2f63 686d 6f64 0a              /tmp/chmod.
```
我们要改为
```
00000000: 2f6d 6f72 7479 0a                        /morty.
```
创建系统文件
```
find . | cpio -o --format=newc > ../rootfs.img
```

第二种方法
gdb-peda$ x/s &poweroff_cmd
0xffffffff824467c0 <poweroff_cmd>:	"/sbin/poweroff"

/home/pwn # more /proc/kallsyms | grep orderly_poweroff
ffffffff81090c90 T orderly_poweroff

第三种方法
